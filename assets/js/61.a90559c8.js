(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{348:function(t,s,n){"use strict";n.r(s);var a=n(14),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"morris"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#morris"}},[t._v("#")]),t._v(" morris")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node6 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node7 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nnode4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnode4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnode2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node1\nnode2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnode5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node1.left = node2;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node1.right = node3;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node2.left = node4;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node2.right = node5;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node3.left = node6;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node4.left = node7")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function morris(root) {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     let cur = root;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     let maxRight = null;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     while (cur) {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         // console.log(cur.val);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         maxRight = cur.left;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         if (maxRight) { // 有左树")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             while (maxRight.right && maxRight.right !== cur) maxRight = maxRight.right;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             if (!maxRight.right) {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                 console.log(cur.val);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                 maxRight.right = cur;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                 cur = cur.left;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                 // continue;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             } else if (maxRight.right === cur) {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                 maxRight.right = null;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                 cur = cur.right;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         } else {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             console.log(cur.val);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             cur = cur.right;// 无左树")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// morris(node1);")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function Node(val){")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     this.val = val;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     this.next = null;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let node1 = new Node(1);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let node2 = new Node(2);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let node3 = new Node(3);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let node4 = new Node(4);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let node5 = new Node(5);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node1.next = node2;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node2.next = node3;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node3.next = node4;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node4.next = node5;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function reverseRootList(root){")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     let cur = root;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     let prev = null;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     let next = cur.next;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     while (cur){")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         next = cur.next;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         cur.next = prev;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         prev = cur;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         cur = next;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     return prev")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const res = reverseRootList(node1)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(res);")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// morris思路")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 没有左子树：cur = cur.right")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 有左子树，找到左子树的最右节点mostRight")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    - 如果 mostRight.right = null，则 mostRight.right = cur")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    - 如果 mostRight.right = cur，则 mostRight.right = null，cur = cur.right")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function morris(root) {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     let cur = root;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     let mostRight;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     while (cur) {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         if (cur.left) { // 有左子树")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             mostRight = cur.left;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             while (mostRight.right && mostRight.right !== cur) mostRight = mostRight.right;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             if (!mostRight.right) {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                 mostRight.right = cur;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                 cur = cur.left;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             } else if (mostRight.right === cur) {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                 // 有左子树的节点会进入这里")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                 const lastNode = reverseRootList(cur.left);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                 // console.log(lastNode);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                 // printNode(lastNode)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                 mostRight.right = null;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                 cur = cur.right;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         } else {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             // console.log(cur.val);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             cur = cur.right;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// morris(node1);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function reverseRootList(root) {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     let prev = null;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     let cur = root;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     let right = root.right;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     while (cur) {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         cur.right = prev;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         prev = cur;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         cur = right;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         if (cur) right = cur.right;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     return prev;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function printNode(root) {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     while (root) {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         console.log(root.val);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         root = root.right;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var searchBST = function (root, val) {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     if(root === null) return;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     if(root.val === val) return root;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     const leftRes = searchBST(root.left,val);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     const rightRes = searchBST(root.right,val);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     return leftRes || rightRes;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// };")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const ans = searchBST(node1, 2)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(ans);")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 判断是否是搜索二叉树 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("morris")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("root")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" cur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" mostRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" curH "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" minH "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" prev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有左子树时")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" mostH "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            mostRight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mostRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" mostRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                mostH"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                mostRight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mostRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mostRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                curH "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" mostH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prev "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" prev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'上一个节点的值：'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'上一个左子树的深度：'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mostH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'当前节点的值：'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'当前节点的深度：'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" curH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    minH "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("minH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" curH "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" mostH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                mostRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                prev "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                cur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                curH"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                prev "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                mostRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                cur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            prev "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            curH"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            cur "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lastNodeListH "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        lastNodeListH"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" minH "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("minH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lastNodeListH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" minH\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("morris")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\n\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);