(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{337:function(t,a,v){"use strict";v.r(a);var r=v(14),_=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_3-类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-类型转换"}},[t._v("#")]),t._v(" 3.类型转换")]),t._v(" "),a("h2",{attrs:{id:"显示类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显示类型转换"}},[t._v("#")]),t._v(" 显示类型转换")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Number()\n把括号里的值转换为number\n"),a("strong",[t._v("只要括号内有非数（除了null和布尔），都会显示NaN")])])]),t._v(" "),a("li",[a("p",[t._v("parseInt() ----"),a("strong",[t._v("有基底")]),t._v("\n把括号里的值转换成数字类型，只能转换string的数字和number\nparse：转化 Int：整型")])])]),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("parseInt( ,radix) radix:基底，取值是2~36,但radix=16时，表示将16进制里的某个数转化成十进制")]),t._v(" "),a("li",[t._v("以目标进制转化成十进制的过程")])])]),t._v(" "),a("blockquote",[a("p",[t._v("砍断原则：阅读字符串时，会从数字位开始阅读，直到非数字位截止，如果字符串开头不是数字，则输出NaN(如果字符串时123.4，则输出123)")])]),t._v(" "),a("ul",[a("li",[t._v("parseFloat\n和parseInt两点不同：")])]),t._v(" "),a("ol",[a("li",[t._v("parseFloat看到小数点时，仍会往后面阅读数字")]),t._v(" "),a("li",[t._v("parseFloat没有基底")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("String\n将括号里的值转换成字符串")])]),t._v(" "),a("li",[a("p",[t._v("toString ----"),a("strong",[t._v("有基底")]),t._v("\n书写方式：变量名.toString()  表示把此变量名里的值的显示类型转换为字符串\n两个不能用toString的值：undefined、null")])])]),t._v(" "),a("blockquote",[a("p",[t._v("toString（radix），当radix=8时，表示将变量名里的值转换成字符串八进制\n以十进制转化成目标进制的过程")])]),t._v(" "),a("ul",[a("li",[t._v("Boolean\n将括号里的值转换成布尔值")])]),t._v(" "),a("h2",{attrs:{id:"隐式类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隐式类型转换"}},[t._v("#")]),t._v(" 隐式类型转换")]),t._v(" "),a("ol",[a("li",[t._v("isNaN()\n"),a("strong",[t._v("判断一个数是否是NaN")])])]),t._v(" "),a("blockquote",[a("p",[t._v("执行过程：先将()里的值放到Number()里转换，如果结果是NaN，则输出true，反之输出false")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("++/--  +/-（一元正负）")])]),t._v(" "),a("ul",[a("li",[t._v("++/--\nvar a = 123;\na ++;\n执行过程：当出现 ++ 时，会先把a的值放进Number()里，然后再加1")]),t._v(" "),a("li",[t._v('+/-\nvar a = +"123";\n此时a从字符串类型转换成数字类型')]),t._v(" "),a("li",[t._v('+（加号）\nvar a = "abc" + 1;\n当 + 号两侧有一侧是字符串时，程序就会调用 String ，将整个变量的类型转换为字符串')])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("-*/%\n这四个运算符号，都是调用Nmuber()")])]),t._v(" "),a("blockquote",[a("p",[t._v('var a = "abc" * 9;\n执行过程：Number("abc") * Nmuber(9)')])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("p",[t._v("&& || !\nBoolean()")])]),t._v(" "),a("li",[a("p",[t._v("<> <= >=\n分两种情况：")])])]),t._v(" "),a("ul",[a("li",[t._v("字符串和数字比较时，会把字符串转换成数字类型，然后进行比较输出布尔值")]),t._v(" "),a("li",[t._v("字符串和字符串比较时，比较的是ASC码")])]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("== !=")])]),t._v(" "),a("h2",{attrs:{id:"不发生隐式类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不发生隐式类型转换"}},[t._v("#")]),t._v(" 不发生隐式类型转换")]),t._v(" "),a("ol",[a("li",[t._v("===\n绝对等于号")]),t._v(" "),a("li",[t._v("!==\n绝对不等于号")])])])}),[],!1,null,null,null);a.default=_.exports}}]);